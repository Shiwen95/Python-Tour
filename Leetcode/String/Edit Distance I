Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.

You have the following three operations permitted on a word:

Insert a character
Delete a character
Replace a character


class Solution:
    def editDistance(self , str1: str, str2: str) -> int:
        # write code here
        n1 = len(str1)
        n2 = len(str2)
        dp = [[0]* (n1 + 1) for _ in range(n2+1)]
        for i in range(max(n1,n2)+1):
            if i <= n1: dp[0][i] = i
            if i <= n2: dp[i][0] = i
        for i in range(1,n2+1):
            for j in range(1,n1+1):
                if str1[j-1] != str2[i-1]:
                    dp[i][j] = 1 + min(dp[i-1][j],dp[i][j-1],dp[i-1][j-1])
                else:
                    dp[i][j] = 1 + min(dp[i-1][j],dp[i][j-1],dp[i-1][j-1]-1)
        print(dp)
        return dp[n2][n1]
