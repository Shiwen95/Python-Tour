## Given two strings word1 and word2, return the minimum cost of operations required to convert word1 to word2.

## You have the following three operations permitted on a word:

## Insert a character cost ic, Delete a character cost dc, Replace a character cost rc


class Solution:
    def minEditCost(self , str1: str, str2: str, ic: int, dc: int, rc: int) -> int:
        # write code here
        n1,n2 = len(str1),len(str2)
        dp = [[0]* (n1 + 1) for _ in range(n2+1)]
        for i in range(max(n1,n2)+1):
            if i <= n1: dp[0][i] = i*dc
            if i <= n2: dp[i][0] = i*ic
        for i in range(1,n2+1):
            for j in range(1,n1+1):
                if str1[j-1] != str2[i-1]:
                    dp[i][j] = min(dp[i][j-1]+dc,dp[i-1][j]+ic,dp[i-1][j-1]+rc)
                else:
                    dp[i][j] = dp[i-1][j-1]
        print(dp)
        return dp[n2][n1]
